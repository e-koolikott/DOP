properties([
        [
                $class  : 'BuildDiscarderProperty',
                strategy: [
                        $class               : 'LogRotator',
                        artifactDaysToKeepStr: '20', artifactNumToKeepStr: '2',
                        daysToKeepStr        : '20', numToKeepStr: '8'
                ]
        ]
])


pipeline {
    environment {
        dopOxygenUrl = 'dop@oxygen.netgroupdigital.com'
        HOME = '.'
    }

    agent none

    stages {
        stage('Front setup') {
            agent {
                docker { image 'node:8' }
            }
            steps {
                git branch: env.BRANCH_NAME,
                credentialsId: '00371305-231a-41e5-94b6-4a7070208d7d',
                url: 'https://Oleg_Pahhomov@bitbucket.org/ekoolikott/koolikott.git'
                sh 'cd front-end && npm install'
                sh 'cd front-end && npm run bower install'
                script {
                    if (env.BRANCH_NAME == 'master') {
                        sh 'cd front-end && npm run grunt package-live'
                    } else {
                        sh 'cd front-end && npm run grunt package'
                    }
                }
                archiveArtifacts artifacts: 'front-end/dist/kott.tar.gz'
            }
        }

        stage('Copy build files') {
            agent any
            steps {
                script {
                    if (env.BRANCH_NAME == 'develop') {
                        sh "ssh -t ${dopOxygenUrl} sh /home/dop/frontremove.sh"
                        sh "scp -r front-end/dist/kott.tar.gz ${dopOxygenUrl}:./"
                        sh "ssh -t ${dopOxygenUrl} sh /home/dop/frontsetup.sh"
                    }
                    else if (env.BRANCH_NAME == '1.57') {
                        sh "ssh -t ${dopOxygenUrl} sh /home/dop/frontremove.sh"
                        sh "scp -r front-end/dist/kott.tar.gz ${dopOxygenUrl}:./"
                        sh "ssh -t ${dopOxygenUrl} sh /home/dop/frontsetup.sh"
                    } else {
                        sh 'echo copy build files disabled'
                    }
                }
            }
        }
    }

    post {
        always {
            emailext body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
                    recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                    subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}"

        }
    }
}
